语法：
用两个空格代替制表符（保证所有环境下获得一致展现）
嵌套元素应当缩进一次
对于属性的定义，确保全部使用双引号，绝不要使用单引号。
不要在自闭和元素的尾部添加斜线<meta> <base> <br> <hr> <img> <input> <col> <frame> <link> <area> <param> <object> <embed> <keygen> <source>
HTML5 doctype:
为每个HTML页面的第一行及标准模式声明，这样能够确保在每个浏览器中拥有一致的展现。
<!DOCTYPE html>
语言属性：
根据html5规范：强烈建议为HTML根元素指定lang属性，从而为文档设置正确的语言。这将有助于语音合成工具确定其应该采用的发音，有助于翻译工具确定其翻译时所应遵守的规则等等。
<html lang=”en-us”>
IE兼容性：
IE支持通过特定的meta标签来确定绘制当前页面所应该采用的IE版本。最好设置为edge mode，从而通知IE采用其所支持的最新的模式。
<meta http-equiv=”X-UA-Compatible” content=”IE=Edge”>
字符编码
通过声明字符编码，能够确保浏览器快速并容易的判断页面内容的渲染方式。这样做的好处是，可以避免在HTML中使用字符实体标记，从而全部与文档编码一致。
<meta chartset=”UTF-8”>
引入CSS和Javascript文件
在引入css和JavaScript文件时一般不要指定type属性，因为text/css和text/javascript是他们的默认值。
<link rel=”stylesheet” href=”code-src.css”>
<style>……….</style>
<script src=”code-src.js”></script>
实用为王
尽量遵循HTML标准和语义，但是不要以牺牲实用性为代价。任何时候都要尽量使用最小的标签并保持最小的复杂度。
属性顺序
HTML属性应当按照以下给出的顺序依次排列，确保代码的易读性。
class 
id, name
data-*
src, for, type, href, value
title, alt
role, aria-*
class用于标识高度可复用性组件，因此应该排在首位，id用于标识具体组件，应当谨慎使用。
布尔型属性
布尔型属性可以在声明时不复制。XHTML规范要求为其赋值，但是HTML5规范不需要。元素的布尔型属性如果有值，就是true，没有值就是false
<input type=”text” disabled>
<input type=”checkbox” value=”1” checked>
<select><option value=”1” selected>1</option></select>
减少标签的数量
编写HTML代码时，尽量避免多余的父元素。
<!-- Not so great -->
<span class="avatar"><img src="..."></span>
<!-- Better -->
<img class="avatar" src="...">
